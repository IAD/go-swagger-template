// Code generated by go-swagger; DO NOT EDIT.

package todos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/sirupsen/logrus"

	models "github.com/IAD/go-swagger-template/examples/todo/gen/server/models"
)

// DestroyOneNoContentCode is the HTTP code returned for type DestroyOneNoContent
const DestroyOneNoContentCode int = 204

/*DestroyOneNoContent Deleted

swagger:response destroyOneNoContent
*/
type DestroyOneNoContent struct {
}

// NewDestroyOneNoContentFunc is declaration for func that create response
type NewDestroyOneNoContentFunc func() *DestroyOneNoContent

// NewDestroyOneNoContent creates DestroyOneNoContent with default headers values
func NewDestroyOneNoContent() *DestroyOneNoContent {

	return &DestroyOneNoContent{}
}

// WriteResponse to the client
func (o *DestroyOneNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*DestroyOneDefault error

swagger:response destroyOneDefault
*/
type DestroyOneDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDestroyOneDefaultFunc is declaration for func that create response
type NewDestroyOneDefaultFunc func() *DestroyOneDefault

// NewDestroyOneDefault creates DestroyOneDefault with default headers values
func NewDestroyOneDefault(code int) *DestroyOneDefault {
	if code <= 0 {
		code = 500
	}

	return &DestroyOneDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the destroy one default response
func (o *DestroyOneDefault) WithStatusCode(code int) *DestroyOneDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the destroy one default response
func (o *DestroyOneDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the destroy one default response
func (o *DestroyOneDefault) WithPayload(payload *models.Error) *DestroyOneDefault {
	o.Payload = payload
	return o
}

// WithErr adds the Error payload with a default code to the destroy one default response
func (o *DestroyOneDefault) WithErr(err error) *DestroyOneDefault {
	type swaggerErr interface {
		Plain() (code string, detail string, attributes map[string]string)
	}

	if swaggerErr, ok := err.(swaggerErr); ok {
		code, detail, attributes := swaggerErr.Plain()

		o.Payload = &models.Error{
			Code:       code,
			Detail:     detail,
			Attributes: attributes,
		}
		return o
	}

	return o.WithError("500", err.Error())
}

// WithError  adds the Error payload to the destroy one default response
func (o *DestroyOneDefault) WithError(code string, message string) *DestroyOneDefault {
	o.Payload = &models.Error{
		Code:    code,
		Message: message,
	}
	return o
}

// SetPayload sets the payload to the destroy one default response
func (o *DestroyOneDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DestroyOneDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			logrus.Panic(err) // let the recovery middleware deal with this
		}
	}
}
